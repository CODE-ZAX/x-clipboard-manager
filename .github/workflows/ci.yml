name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        qt-version: ['5.15', '6.2']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ matrix.qt-version }}

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential

    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install cmake

    - name: Build with qmake
      run: |
        qmake ClipboardManager.pro
        make -j$(nproc 2>/dev/null || sysctl -n hw.ncpu 2>/dev/null || echo 4)

    - name: Build with CMake
      run: |
        mkdir build-cmake
        cd build-cmake
        cmake ..
        make -j$(nproc 2>/dev/null || sysctl -n hw.ncpu 2>/dev/null || echo 4)

    - name: Test build artifacts
      run: |
        ls -la build/
        ls -la build-cmake/bin/

  package:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.2'

    - name: Build and package
      run: |
        chmod +x scripts/*.sh
        ./scripts/package.sh

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ClipboardManager-${{ matrix.os }}
        path: packages/

  release:
    needs: package
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ClipboardManager-ubuntu-latest/**/*
          ClipboardManager-macos-latest/**/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
